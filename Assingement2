# TASK1
Write python/bash script that create 100 containers(25 of alpine, 25 of fedora , 25 of centos , 25 of Java) that runs even after rebooting

#!/bin/bash
count=1
while [ $count -le 100 ]
do
  if [ $count -lt 26 ]
  then
    sudo docker container run -d --restart unless-stopped --name adhocnw$count alpine ping 8.8.8.8
  elif [ $count -ge 26 && $count -le 50 ]
  then
    sudo docker container run -d --restart unless-stopped --name adhocnw$count fedora ping 8.8.8.8
  elif [ $count -ge 51 && $count -le 75 ]
  then
    sudo docker container run -d --restart unless-stopped --name adhocnw$count centos ping 8.8.8.8
  else
    sudo docker container run -d --restart unless-stopped --name adhocnw$count java ping 8.8.8.8
  fi
  ((count++))
done
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

# TASK 2
Write a combination of Docker and OS commands to get list of Name,Created of all containers and store them in a list

sudo docker ps -a | awk 'print{ $14, $5$6$7$8 }' > file
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''


# TASK 3
Run a container from local system using custom build Docker Image with parent process as firefox

Docker is not installed locally 
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

# TASK 4
Get RAM & CPU consumption from 100 containers and store in text file

docker stats -a  --no-stream --format "table {{.Container}}\t{{.Name}}\t{{.CPUPerc}}\t{{.MemUsage}}" > RAM.txt
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
